// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.GpsLocation", b =>
                {
                    b.Property<int>("GpsLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GpsSessionId")
                        .HasColumnType("int");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lon")
                        .HasColumnType("float");

                    b.HasKey("GpsLocationId");

                    b.HasIndex("GpsSessionId");

                    b.ToTable("GpsLocations");
                });

            modelBuilder.Entity("Domain.GpsSession", b =>
                {
                    b.Property<int>("GpsSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionLength")
                        .HasColumnType("int");

                    b.HasKey("GpsSessionId");

                    b.ToTable("GpsSessions");
                });

            modelBuilder.Entity("Domain.GpsLocation", b =>
                {
                    b.HasOne("Domain.GpsSession", "GpsSession")
                        .WithMany("GpsLocations")
                        .HasForeignKey("GpsSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GpsSession");
                });

            modelBuilder.Entity("Domain.GpsSession", b =>
                {
                    b.Navigation("GpsLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
